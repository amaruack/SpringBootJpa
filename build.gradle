buildscript {
    ext {
        querydsl_version="5.0.0"
    }
}

plugins {
    id "java"
    id "war"
    id "org.springframework.boot" version "2.7.8"
    id "io.spring.dependency-management" version "1.0.15.RELEASE"
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = "com.example"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = "11"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-devtools"

    implementation "com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0"

    implementation "com.google.code.gson:gson:2.10.1"
    implementation "com.querydsl:querydsl-jpa:$querydsl_version"
    annotationProcessor "com.querydsl:querydsl-apt:$querydsl_version"
    implementation "com.google.guava:guava:31.1-jre"
    compileOnly "org.projectlombok:lombok"
    runtimeOnly "com.h2database:h2"
    annotationProcessor "org.projectlombok:lombok"
    providedRuntime "org.springframework.boot:spring-boot-starter-tomcat"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
}

/*
 * queryDSL 설정 추가
 */
// querydsl에서 사용할 경로 설정
def querydslDir = "$buildDir/generated/querydsl"
// JPA 사용 여부와 사용할 경로를 설정
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
// build 시 사용할 sourceSet 추가
sourceSets {
    main.java.srcDir querydslDir
}
// querydsl 컴파일시 사용할 옵션 설정
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}

tasks.named("test") {
    useJUnitPlatform()
}
